/**
 *  根据传入的时间戳返回一定格式的日期文字
 * @param { Number } d
 * @return 返回格式 xx年xx月xx日 周x
 */
function conversionDate(d) {
  var date = getDate(d);
  var y = date.getFullYear();
  var m = date.getMonth() + 1;
  var d = date.getDate();
  var w = date.getDay();
  var wee = '';

  var dateString = '';

  switch (w) {
    case 0:
      wee = '周日';
      break;
    case 1:
      wee = '周一';
      break;
    case 2:
      wee = '周二';
      break;
    case 3:
      wee = '周三';
      break;
    case 4:
      wee = '周四';
      break;
    case 5:
      wee = '周五';
      break;
    case 6:
      wee = '周六';
      break;
  }

  
  if (y !== getDate().getFullYear()) {
    dateString = y + '年' + m + '月' + d + '日 ' + wee;
  } else {
    dateString = m + '月' + d + '日 ' + wee;
  }

  return dateString;
}

/**
 * 根据传入的时间展示文本
 * @param {Number} d 
 * @reutrn '今天' '明天' 一定格式日期文字
 */
function showDateText(d) {
  var txt = '';
  var date = getDate(d);
  var today = getDate();

  if (date.getFullYear() === today.getFullYear() && date.getMonth() === today.getMonth()) {
    if (date.getDate() === today.getDate()) {
      txt = '今天';
    } else if (date.getDate() === getDate(today.getTime() + 86400000).getDate()) {
      txt = '明天';
    }
  }

  return txt;
}

/**
 * 判断是否当前年份
 * @param {Number} d 
 */
function isTodayYear(d) {
  var year = getDate(d).getFullYear();
  var todayYear = getDate().getFullYear();

  return year === todayYear;
}


/**
 * 判断当前时间是否超过指定时间
 * @param {Date} d 截止日期
 * return Boolean (true 超过指定日期)
 */
function isOverTime(d) {
  var today = getDate();
  var date = getDate(d);
  var isOver = false;

  var resultY = today.getFullYear() === date.getFullYear();
  var resultM = today.getMonth() === date.getMonth();

  if (today.getFullYear() > date.getFullYear()) {
    isOver = true;
  } else if (resultY && today.getMonth() > date.getMonth()) {
    isOver = true;
  } else if (resultY && resultM && today.getDate() > date.getDate()) {
    isOver = true;
  }

  return isOver;
}


/**
 * 根据repeat对象显示激活时的文本
 * @param type 
 * @param base
 */
function showRepeatTxt(type, base) {
  var txt = '';

  switch (type) {
    case 'day':
      txt = '每天';
      break;
    case 'week':
      txt = '每周';
      break;
    case 'month':
      txt = '每月';
      break;
    case 'year':
      txt = '每年';
      break;
  }

  if (base > 1) {
    txt = txt[0] + ' ' + base + ' ' + txt[1];
  }
  
  return txt;
}

/**
 * 根据repeat显示选中一周中的星期几
 * @param type 
 * @param week_value 
 */
function showRepeatWeekTxt(type, week_value) {
  var txt = '';
  var obj = {
    '0': '日',
    '1': '一',
    '2': '二',
    '3': '三',
    '4': '四',
    '5': '五',
    '6': '六',
  };

  if (type === 'week') {
    if (week_value.length === 1) {
      txt = '星期' + obj[week_value[0] + ''];
    } else if (week_value.toString() === '1,2,3,4,5') {
      txt = '工作日';
    } else {
      for (var i = 0; i < week_value.length; i++) {
        var d = week_value[i] + '';
        txt += '周' + obj[d] + ', ';
      }
      txt = txt.slice(0, txt.length-2);
    }
  }

  return txt;
}


module.exports = {
  conversionDate: conversionDate,
  isTodayYear: isTodayYear,
  isOverTime: isOverTime,
  showDateText: showDateText,
  showRepeatTxt: showRepeatTxt,
  showRepeatWeekTxt: showRepeatWeekTxt,
}